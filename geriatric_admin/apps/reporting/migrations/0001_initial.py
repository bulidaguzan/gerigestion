# Generated by Django 4.2.23 on 2025-07-27 01:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('template_type', models.CharField(choices=[('residents_monthly', 'Residentes Mensual'), ('staff_attendance', 'Asistencia del Personal'), ('facilities_occupancy', 'Ocupación de Instalaciones'), ('financial_summary', 'Resumen Financiero'), ('medical_records', 'Registros Médicos'), ('custom', 'Personalizado')], max_length=30, verbose_name='Tipo de Plantilla')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('default_filters', models.JSONField(blank=True, default=dict, verbose_name='Filtros por Defecto')),
                ('default_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=10, verbose_name='Formato por Defecto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Plantilla de Reporte',
                'verbose_name_plural': 'Plantillas de Reportes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('report_type', models.CharField(choices=[('residents', 'Residentes'), ('staff', 'Personal'), ('facilities', 'Instalaciones'), ('financial', 'Financiero'), ('medical', 'Médico'), ('occupancy', 'Ocupación'), ('custom', 'Personalizado')], max_length=20, verbose_name='Tipo de Reporte')),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=10, verbose_name='Formato')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido')], default='pending', max_length=20, verbose_name='Estado')),
                ('date_from', models.DateField(blank=True, null=True, verbose_name='Fecha Desde')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Fecha Hasta')),
                ('filters', models.JSONField(blank=True, default=dict, verbose_name='Filtros')),
                ('file_path', models.CharField(blank=True, max_length=500, verbose_name='Ruta del Archivo')),
                ('file_size', models.IntegerField(default=0, verbose_name='Tamaño del Archivo (bytes)')),
                ('generated_at', models.DateTimeField(blank=True, null=True, verbose_name='Generado el')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Reporte',
                'verbose_name_plural': 'Reportes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('widget_type', models.CharField(choices=[('chart', 'Gráfico'), ('metric', 'Métrica'), ('table', 'Tabla'), ('list', 'Lista')], max_length=20, verbose_name='Tipo de Widget')),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Línea'), ('bar', 'Barras'), ('pie', 'Circular'), ('doughnut', 'Dona'), ('area', 'Área')], max_length=20, verbose_name='Tipo de Gráfico')),
                ('data_source', models.CharField(max_length=100, verbose_name='Fuente de Datos')),
                ('refresh_interval', models.IntegerField(default=60, verbose_name='Intervalo de Actualización (minutos)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('position_x', models.IntegerField(default=0, verbose_name='Posición X')),
                ('position_y', models.IntegerField(default=0, verbose_name='Posición Y')),
                ('width', models.IntegerField(default=6, verbose_name='Ancho')),
                ('height', models.IntegerField(default=4, verbose_name='Alto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Widget del Dashboard',
                'verbose_name_plural': 'Widgets del Dashboard',
                'ordering': ['position_y', 'position_x'],
            },
        ),
    ]
